import os

from datetime import datetime
from PyQt5 import QtWidgets, uic
from PyQt5.QtWidgets import QFileDialog, QMessageBox
from PyQt5.QtGui import QPixmap, QImage
from io import BytesIO

from src.models.inference import InferenceManager

class InferenceWindow(QtWidgets.QMainWindow):
    def __init__(self, config, interfaces):
        super().__init__()
        path = os.path.join(interfaces, 'inference.ui')
        uic.loadUi(path, self)

        self.generator = InferenceManager(config)

        self._setup_ui()

    def _setup_ui(self):
        self.load_image.setScaledContents(True)
        self.generated_image.setScaledContents(True)

        self.load_weight_button.clicked.connect(self.load_custom_weights)
        self.load_mask_button.clicked.connect(self.load_mask)
        self.Generation_image.clicked.connect(self.generate_image)
        self.save_button.clicked.connect(self.save_image)

        self.comboBox.setCurrentIndex(-1)
        self.comboBox.currentTextChanged.connect(self.select_model)

    def log(self, message):
        timestamp = datetime.now().strftime("[%H:%M:%S]")
        self.log.append(f"{timestamp} {message}")

    def select_model(self, choice):
        try:
            self.generator.load_model(choice)
            self.log.append(f"üß† –ú–æ–¥–µ–ª—å {choice} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
        except Exception as e:
            self.log.append(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", str(e))

    def load_custom_weights(self):
        """–†—É—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –≤–µ—Å–æ–≤"""
        path, _ = QFileDialog.getOpenFileName(self, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Å–∞ –º–æ–¥–µ–ª–∏", "", "(*.pt);;All Files (*)")
        if not path:
            return
        try:
            self.generator.load_weights(path)
            self.log.append(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–µ—Å–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑: {path}")
        except Exception as e:
            self.log.append(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ—Å–æ–≤: {str(e)}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–µ—Å–∞:\n{str(e)}")

    def load_mask(self):
        path, _ = QFileDialog.getOpenFileName(self, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∞—Å–∫–∏", "", "(*.png *.jpg *.jpeg *.bmp);;All Files (*)")
        if not path:
            return
        try:
            pil_image = self.generator.load_mask(path)

            buf = BytesIO()
            pil_image.save(buf, format='PNG')
            buf.seek(0)

            qimage = QImage()
            qimage.loadFromData(buf.read(), 'PNG')
            pixmap = QPixmap.fromImage(qimage)

            self.load_image.setPixmap(pixmap)
            self.log.append(f"üì• –ú–∞—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

        except Exception as e:
            QMessageBox.critical(self, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å–∫–∏.: {str(e)}")
            self.log.append("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Å–∫—É: {str(e)}")

    def generate_image(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        if not self._check_generation_conditions():
            return
            
        try:
            result = self.generator.generate()
            buf = BytesIO()
            result.save(buf, format='PNG')
            buf.seek(0)

            qimage = QImage()
            qimage.loadFromData(buf.read(), 'PNG')
            self.generated_image.setPixmap(QPixmap.fromImage(qimage))
            self.log.append("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        except Exception as e:
            self.log.append(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", str(e))

    def save_image(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        if self.generator.last_generated_image is None:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–°–Ω–∞—á–∞–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
            return
        
        if self.generator.current_mask_path:
            base_name = os.path.splitext(os.path.basename(self.generator.current_mask_path))[0] + "_generated"
        else:
            base_name = "generated"

        path, _ = QFileDialog.getSaveFileName(self, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", base_name, "PNG Image (*.png);;All Files (*)")
        if not path:
            return
        
        try:
            self.generator.save_last_image(path)
            self.log.append(f"üíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: {path}")
        except Exception as e:
            self.log.append(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {str(e)}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:\n{str(e)}")

    def _check_generation_conditions(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π"""
        if not self.generator.weights_loaded:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–í–µ—Å–∞ –º–æ–¥–µ–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
            return False
        if self.generator.current_mask is None:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–∞—Å–∫—É!")
            return False
        if self.generator.model is None:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å!")
            return False
        return True